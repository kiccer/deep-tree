function r(n,e,i="children",t){return n.reduce(((n,c)=>{if(!e(c,t))return n;const u={...c};return Array.isArray(u[i])&&(u[i]=r(u[i],e,i,c)),n.concat(u)}),[])}function n(r,e,i="children",t){return r.some((r=>e(r,t)||Array.isArray(r[i])&&n(r[i],e,i,r)))}function e(r,n,i="children",t){return r.every((r=>n(r,t)&&(!Array.isArray(r[i])||e(r[i],n,i,r))))}function i(r,n,e="children",t){return r.find((r=>n(r,t)?r:i(r[e]??[],n,e,r)))}function t(r,n,e="children",i){return r.forEach((r=>{n(r,i),Array.isArray(r[e])&&t(r[e],n,e,r)}))}function c(r,n,e="children",i){return r.map((r=>{const t=n(r,i);return Array.isArray(r[e])&&(t[e]=c(r[e],n,e,r)),t}))}export{t as deepEach,e as deepEvery,r as deepFilter,i as deepFind,c as deepMap,n as deepSome};
